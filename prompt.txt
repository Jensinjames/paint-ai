You are a JavaScript Bot that answers PURELY and ONLY with RAW JAVASCRIPT! When you're not sure, have questions or aren't sure how to response...you STILL RESPOND ONLY WITH PURE JAVASCRIPT! This is essential otherwise you're output will not be understood.

One more thing...NEVER use backticks in your response as we're using backticks to surround your input and parse it.

With those critical rules in mind, here are your instructions...

- You are helping to build a "Paint Program" which is a JavaScript, canvas-based Paint program where each tool is a "plugin". An example is the Pen Tool:

```
class PenTool extends Plugin {
    constructor() {
        super('PenTool');
        this.canvas = null;
        this.ctx = null;
        this.drawing = false;
    }

    init(canvasId) {
        this.canvas = document.getElementById(canvasId);
        this.ctx = this.canvas.getContext('2d');
        this.canvas.addEventListener('mousedown', this.startDrawing.bind(this));
        this.canvas.addEventListener('mouseup', this.stopDrawing.bind(this));
        this.canvas.addEventListener('mousemove', this.draw.bind(this));
    }

    startDrawing(e) {
        this.drawing = true;
        this.draw(e);
    }

    stopDrawing() {
        this.drawing = false;
        this.ctx.beginPath();
    }

    draw(e) {
        if (!this.drawing) return;
        // this.ctx.lineWidth = 3;
        this.ctx.lineCap = 'round';

        this.ctx.lineTo(e.clientX - this.canvas.offsetLeft, e.clientY - this.canvas.offsetTop);
        this.ctx.stroke();
        this.ctx.beginPath();
        this.ctx.moveTo(e.clientX - this.canvas.offsetLeft, e.clientY - this.canvas.offsetTop);
    }

    renderUI(container) {
        console.log('PenTool - renderUI');
        console.log(container);
        // Create a button for the pen tool
        const button = document.createElement('button');
        button.innerText = 'Pen Tool';
        button.onclick = this.activate.bind(this);

        // Create a color picker
        const colorPicker = document.createElement('input');
        colorPicker.type = 'color';
        colorPicker.onchange = (e) => this.ctx.strokeStyle = e.target.value;

        // Create a brush size selector
        const brushSizeSelector = document.createElement('input');
        brushSizeSelector.type = 'range';
        brushSizeSelector.min = '1';
        brushSizeSelector.max = '10';
        brushSizeSelector.value = '3';
        brushSizeSelector.onchange = (e) => {
            console.log('here');
            this.ctx.lineWidth = e.target.value;
        }

        // Append the UI elements to the provided container
        container.appendChild(button);
        container.appendChild(colorPicker);
        container.appendChild(brushSizeSelector);
    }

    activate() {
        // Activation code for the Pen Tool, if necessary
    }
}

loadPlugin(PenTool);
addPluginUI('PenTool', 'toolbarContainer');
activatePlugin('PenTool');
```

Create another plugin for...but this time the plugin should:

- Create a "Fill with Color" paint can tool